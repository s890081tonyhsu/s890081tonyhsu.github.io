{"version":3,"file":"js/819.7f04b893.js","mappings":"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","sources":["webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/linkify-it@3.0.3/node_modules/linkify-it/index.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/linkify-it@3.0.3/node_modules/linkify-it/lib/re.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/index.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/common/entities.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/common/html_blocks.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/common/html_re.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/common/utils.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/index.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/index.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/parser_block.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/parser_core.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/parser_inline.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/presets/commonmark.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/presets/default.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/presets/zero.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/renderer.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/ruler.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/code.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/fence.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/heading.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/hr.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/html_block.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/lheading.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/list.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/reference.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/state_block.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/table.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/block.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/inline.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/linkify.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/normalize.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/replacements.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/state_core.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/entity.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/escape.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/image.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/link.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/newline.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/text.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/token.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/decode.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/encode.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/format.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/index.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/parse.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/punycode@2.3.0/node_modules/punycode/punycode.es6.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Cc/regex.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Cf/regex.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/P/regex.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Z/regex.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/index.js","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/properties/Any/regex.js","webpack://s890081tonyhsu.github.io/./src/views/CollectionPage.vue?7688","webpack://s890081tonyhsu.github.io/./src/components/CollectionRow.vue?59ac","webpack://s890081tonyhsu.github.io/./src/components/CollectionRow.vue?5e50","webpack://s890081tonyhsu.github.io/./src/components/CollectionRow.vue","webpack://s890081tonyhsu.github.io/./src/components/CollectionArticle.vue?2b46","webpack://s890081tonyhsu.github.io/./node_modules/.pnpm/vue-markdown-render@2.0.1/node_modules/vue-markdown-render/dist/VueMarkdown.js","webpack://s890081tonyhsu.github.io/./src/components/CollectionArticle.vue?b953","webpack://s890081tonyhsu.github.io/./src/components/CollectionArticle.vue","webpack://s890081tonyhsu.github.io/./src/data/collections.data.ts","webpack://s890081tonyhsu.github.io/./src/views/CollectionPage.vue?2077","webpack://s890081tonyhsu.github.io/./src/views/CollectionPage.vue"],"sourcesContent":["'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"collection-container\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"collection-header\" }, [\n  /*#__PURE__*/_createElementVNode(\"h1\", null, \"Collection\"),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"The following are the projects I have participated. Each project has attached technology tags and a screenshot.\"),\n    /*#__PURE__*/_createElementVNode(\"br\"),\n    /*#__PURE__*/_createTextVNode(\"Some projects can be linked to the source code or Demo page.\")\n  ])\n], -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"blank\" }, null, -1)\nconst _hoisted_4 = {\n  key: 1,\n  class: \"collection-container\"\n}\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"blank\" }, null, -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_CollectionRow = _resolveComponent(\"CollectionRow\")!\n  const _component_CollectionArticle = _resolveComponent(\"CollectionArticle\")!\n\n  return (_ctx.uid.toString().length === 0)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _hoisted_2,\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.collections, (collection, key) => {\n          return (_openBlock(), _createBlock(_component_CollectionRow, {\n            key: `collection-${key}`,\n            uid: key,\n            collectionRowData: collection\n          }, null, 8, [\"uid\", \"collectionRowData\"]))\n        }), 128)),\n        _hoisted_3\n      ]))\n    : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n        _createVNode(_component_CollectionArticle, {\n          collectionArticleData: _ctx.collections[_ctx.uid]\n        }, null, 8, [\"collectionArticleData\"]),\n        _hoisted_5\n      ]))\n}","import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { class: \"collection-row\" }\nconst _hoisted_2 = { class: \"collection-preview\" }\nconst _hoisted_3 = [\"src\"]\nconst _hoisted_4 = {\n  key: 1,\n  class: \"no-preview\"\n}\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"i\", { class: \"fa-solid fa-image\" }, null, -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, \"No Preview\", -1)\nconst _hoisted_7 = [\n  _hoisted_5,\n  _hoisted_6\n]\nconst _hoisted_8 = { class: \"collection-content\" }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_10 = { class: \"collection-tags\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_RouterLink = _resolveComponent(\"RouterLink\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      ((_ctx.collectionRowData as CollectionData).image)\n        ? (_openBlock(), _createElementBlock(\"img\", {\n            key: 0,\n            src: (_ctx.collectionRowData as CollectionData).image,\n            alt: \"\"\n          }, null, 8, _hoisted_3))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _hoisted_7))\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"h2\", null, [\n        _createVNode(_component_RouterLink, {\n          to: `/collection/${_ctx.uid}`\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString((_ctx.collectionRowData as CollectionData).title), 1)\n          ]),\n          _: 1\n        }, 8, [\"to\"]),\n        _hoisted_9,\n        _createElementVNode(\"span\", null, _toDisplayString((_ctx.collectionRowData as CollectionData).subtitle), 1)\n      ]),\n      _createElementVNode(\"div\", _hoisted_10, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList((_ctx.collectionRowData as CollectionData).tags, (tag, i) => {\n          return (_openBlock(), _createElementBlock(\"span\", {\n            key: `collection-${i}`,\n            class: \"collection-tag\"\n          }, _toDisplayString(tag), 1))\n        }), 128))\n      ])\n    ])\n  ]))\n}","\r\nimport { defineComponent } from 'vue'\r\nimport type { CollectionData } from '@/data/collections.data'\r\n\r\nconst CollectionRow = defineComponent({\r\n  props: {\r\n    uid: String,\r\n    collectionRowData: Object as () => CollectionData\r\n  }\r\n})\r\n\r\nexport default CollectionRow\r\n","import { render } from \"./CollectionRow.vue?vue&type=template&id=19fd86e3&ts=true\"\nimport script from \"./CollectionRow.vue?vue&type=script&lang=ts\"\nexport * from \"./CollectionRow.vue?vue&type=script&lang=ts\"\n\nimport \"./CollectionRow.vue?vue&type=style&index=0&id=19fd86e3&lang=scss\"\n\nimport exportComponent from \"E:\\\\Projects\\\\s890081tonyhsu.github.io\\\\node_modules\\\\.pnpm\\\\vue-loader@17.0.1_rxm2n6lmvjvxbh6mcvavtzsebe\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx } from \"vue\"\n\nconst _hoisted_1 = { class: \"collection-display\" }\nconst _hoisted_2 = [\"src\"]\nconst _hoisted_3 = {\n  key: 0,\n  class: \"collection-links\"\n}\nconst _hoisted_4 = [\"href\"]\nconst _hoisted_5 = {\n  key: 1,\n  class: \"collection-links\"\n}\nconst _hoisted_6 = [\"href\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_vue_markdown = _resolveComponent(\"vue-markdown\")!\n  const _component_RouterLink = _resolveComponent(\"RouterLink\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"img\", {\n      src: (_ctx.collectionArticleData as CollectionData).image,\n      alt: \"\"\n    }, null, 8, _hoisted_2),\n    _createVNode(_component_vue_markdown, { source: _ctx.article }, null, 8, [\"source\"]),\n    _createElementVNode(\"ul\", null, [\n      ((_ctx.collectionArticleData as CollectionData).projectLink)\n        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_3, [\n            _createTextVNode(\" Source Code: \"),\n            _createElementVNode(\"a\", {\n              href: (_ctx.collectionArticleData as CollectionData).projectLink,\n              target: \"_blank\"\n            }, _toDisplayString((_ctx.collectionArticleData as CollectionData).projectLink), 9, _hoisted_4)\n          ]))\n        : _createCommentVNode(\"\", true),\n      ((_ctx.collectionArticleData as CollectionData).demoLink)\n        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_5, [\n            _createTextVNode(\" Demo: \"),\n            _createElementVNode(\"a\", {\n              href: (_ctx.collectionArticleData as CollectionData).demoLink,\n              target: \"_blank\"\n            }, _toDisplayString((_ctx.collectionArticleData as CollectionData).demoLink), 9, _hoisted_6)\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"h4\", null, [\n      _createVNode(_component_RouterLink, { to: `/collection` }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"Back\")\n        ]),\n        _: 1\n      })\n    ])\n  ]))\n}","import { h, defineComponent } from 'vue';\nimport MarkdownIt from 'markdown-it';\nvar VueMarkdown = defineComponent({\n    name: 'VueMarkdown',\n    props: {\n        source: {\n            type: String,\n            required: true,\n        },\n        options: {\n            type: Object,\n            required: false,\n        },\n    },\n    data: function () {\n        return {\n            md: null,\n        };\n    },\n    computed: {\n        content: function () {\n            var _a;\n            var src = this.source;\n            return (_a = this.md) === null || _a === void 0 ? void 0 : _a.render(src);\n        },\n    },\n    created: function () {\n        var _a;\n        this.md = new MarkdownIt((_a = this.options) !== null && _a !== void 0 ? _a : {});\n    },\n    render: function () {\n        return h('div', { innerHTML: this.content });\n    },\n});\nexport default VueMarkdown;\n//# sourceMappingURL=VueMarkdown.js.map","\r\nimport { defineComponent } from 'vue'\r\nimport VueMarkdown from 'vue-markdown-render'\r\nimport type { CollectionData } from '@/data/collections.data'\r\n\r\nconst CollectionArticle = defineComponent({\r\n  props: {\r\n    collectionArticleData: Object as () => CollectionData\r\n  },\r\n  components: {\r\n    VueMarkdown\r\n  },\r\n  data: () => {\r\n    return {\r\n      article: ''\r\n    }\r\n  },\r\n  mounted: async function () {\r\n    const url = (this.collectionArticleData as CollectionData).article || ''\r\n    if (url.length === 0) return\r\n    await fetch(url).then(response => response.text()).then(text => {\r\n      this.article = text\r\n    })\r\n  }\r\n})\r\n\r\nexport default CollectionArticle\r\n","import { render } from \"./CollectionArticle.vue?vue&type=template&id=a38258e2&ts=true\"\nimport script from \"./CollectionArticle.vue?vue&type=script&lang=ts\"\nexport * from \"./CollectionArticle.vue?vue&type=script&lang=ts\"\n\nimport \"./CollectionArticle.vue?vue&type=style&index=0&id=a38258e2&lang=scss\"\n\nimport exportComponent from \"E:\\\\Projects\\\\s890081tonyhsu.github.io\\\\node_modules\\\\.pnpm\\\\vue-loader@17.0.1_rxm2n6lmvjvxbh6mcvavtzsebe\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export interface CollectionData {\r\n  image: string,\r\n  title: string,\r\n  subtitle: string,\r\n  article?: string,\r\n  tags: string[],\r\n  projectLink?: string,\r\n  demoLink?: string\r\n}\r\n\r\nconst collections: Record<string, CollectionData> = {\r\n  'nekowiztw-cardfinder': {\r\n    title: 'NekowizTW cardFinder',\r\n    subtitle: 'Accepted by Players in Quiz RPG: The World of Mystic Wiz',\r\n    image: require('@/assets/images/collection/nekowiztw-cardfinder.png'),\r\n    article: require('@/assets/markdown/nekowiztw-cardfinder.md'),\r\n    projectLink: 'https://github.com/NekowizTW/cardFinder',\r\n    demoLink: 'https://nekowiztw.github.io/cardFinder/#/',\r\n    tags: ['React', 'Redux', 'Lodash', 'Sass', 'Webpack']\r\n  },\r\n  'nekowiztw-fairymaker': {\r\n    title: 'NekowizTW fairyMaker',\r\n    subtitle: 'Custom Editor on Canvas',\r\n    image: require('@/assets/images/collection/nekowiztw-fairymaker.png'),\r\n    article: require('@/assets/markdown/nekowiztw-fairymaker.md'),\r\n    projectLink: 'https://github.com/s890081tonyhsu/fairyMaker',\r\n    demoLink: 'https://s890081tonyhsu.github.io/fairyMaker/',\r\n    tags: ['HTML', 'CSS', 'JavaScript', 'i18n']\r\n  },\r\n  'unity-rhythm-game': {\r\n    title: 'Unity Rhythm Game',\r\n    subtitle: 'A Project with Most Stars on My Github',\r\n    image: require('@/assets/images/collection/unity-rhythm-game.jpeg'),\r\n    article: require('@/assets/markdown/unity-rhythm-game.md'),\r\n    projectLink: 'https://github.com/s890081tonyhsu/unity-rhythm-game',\r\n    tags: ['Unity', 'C#']\r\n  },\r\n  'fju-graduation-project': {\r\n    title: 'Flux Based SCADA System in Factory',\r\n    subtitle: 'FJU Graduation Project',\r\n    image: require('@/assets/images/collection/fju-graduation-project.png'),\r\n    article: require('@/assets/markdown/fju-graduation-project.md'),\r\n    tags: ['NodeJS', 'Flux', 'Websocket']\r\n  },\r\n  'fju-database-project': {\r\n    title: 'Pocket Judge',\r\n    subtitle: 'FJU Database Project',\r\n    image: require('@/assets/images/collection/fju-database-project.png'),\r\n    article: require('@/assets/markdown/fju-database-project.md'),\r\n    tags: ['Ruby on Rails', 'MySQL', 'Docker']\r\n  },\r\n  'fju-book-navigation-in-library': {\r\n    title: 'Book Navigation in Library',\r\n    subtitle: 'FJU Web Design Final Project',\r\n    image: require('@/assets/images/collection/fju-book-navigation-in-library.jpg'),\r\n    article: require('@/assets/markdown/fju-book-navigation-in-library.md'),\r\n    tags: ['HTML', 'AJAX', 'Javascript', 'AmazeUI']\r\n  },\r\n  'interactive-webpage-of-i-ching-divination': {\r\n    title: 'Interactive Webpage of I Ching Divination',\r\n    subtitle: 'FJU I Ching Final Homework',\r\n    image: require('@/assets/images/collection/interactive-webpage-of-i-ching-divination.png'),\r\n    article: require('@/assets/markdown/interactive-webpage-of-i-ching-divination.md'),\r\n    tags: ['HTML', 'JavaScript', 'Canvas']\r\n  }\r\n}\r\n\r\nexport default collections\r\n","\r\nimport { defineComponent } from 'vue'\r\nimport CollectionRow from '@/components/CollectionRow.vue'\r\nimport CollectionArticle from '@/components/CollectionArticle.vue'\r\n\r\nimport collections from '@/data/collections.data'\r\n\r\nconst CollectionPage = defineComponent({\r\n  props: ['uid'],\r\n  components: {\r\n    CollectionRow,\r\n    CollectionArticle\r\n  },\r\n  data () {\r\n    return {\r\n      collections\r\n    }\r\n  }\r\n})\r\n\r\nexport default CollectionPage\r\n","import { render } from \"./CollectionPage.vue?vue&type=template&id=8f4cf92a&ts=true\"\nimport script from \"./CollectionPage.vue?vue&type=script&lang=ts\"\nexport * from \"./CollectionPage.vue?vue&type=script&lang=ts\"\n\nimport \"./CollectionPage.vue?vue&type=style&index=0&id=8f4cf92a&lang=scss\"\n\nimport exportComponent from \"E:\\\\Projects\\\\s890081tonyhsu.github.io\\\\node_modules\\\\.pnpm\\\\vue-loader@17.0.1_rxm2n6lmvjvxbh6mcvavtzsebe\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["assign","obj","sources","Array","prototype","slice","call","arguments","forEach","source","Object","keys","key","_class","toString","isString","isObject","isRegExp","isFunction","escapeRE","str","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","k","hasOwnProperty","defaultSchemas","validate","text","pos","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","match","length","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_2ch_src_re","tlds_default","split","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","normalize","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","push","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","pretest","Match","shift","start","end","__last_index__","this","schema","__schema__","toLowerCase","index","lastIndex","raw","url","createMatch","LinkifyIt","schemas","options","add","definition","set","m","ml","me","len","next","tld_pos","at_pos","exec","testSchemaAt","search","indexOf","result","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","module","exports","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","_hasOwnProperty","has","object","TypeError","arrayReplaceAt","src","newElements","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","code","charCodeAt","parseInt","unescapeMd","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","escapeHtml","REGEXP_ESCAPE_RE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","trim","toUpperCase","lib","mdurl","ucmicro","parseLinkLabel","parseLinkDestination","parseLinkTitle","max","level","lines","ok","state","disableNested","found","marker","prevPos","labelEnd","posMax","oldPos","md","inline","skipToken","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","MarkdownIt","presetName","block","core","renderer","linkify","configure","presets","components","rules","ruler","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","use","plugin","args","apply","env","State","process","tokens","render","parseInline","inlineMode","renderInline","Ruler","_rules","i","alt","tokenize","startLine","endLine","getRules","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","Core","l","_rules2","cache","pending","pushPending","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","default_rules","code_inline","slf","token","renderAttrs","content","code_block","fence","highlighted","tmpAttrs","tmpToken","info","langName","langAttrs","attrIndex","attrs","image","renderInlineAsText","children","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","hidden","nesting","tag","type","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","fn","at","opt","before","beforeName","ruleName","splice","after","afterName","chainName","silent","adjustTab","initial","lastLineEmpty","nextLine","offset","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","isOutdented","oldLineMax","bMarks","tShift","eMarks","bsCount","parentType","markup","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","tmp","skipSpacesBack","skipCharsBack","cnt","block_names","HTML_SEQUENCES","lineText","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","Math","min","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","Token","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","getLine","substr","escapedSplit","isEscaped","lastPos","current","substring","columns","columnCount","aligns","t","tableLines","tbodyLines","firstCh","secondCh","pop","tok","isLinkOpen","isLinkClose","j","currentToken","nodes","ln","htmlLinkLevel","fullUrl","urlText","links","blockTokens","NEWLINES_RE","NULL_RE","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","StateCore","EMAIL_RE","AUTOLINK_RE","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","close","open","curr","tokens_meta","postProcess","startDelim","endDelim","isStrong","scanned","scanDelims","can_open","can_close","DIGITAL_RE","NAMED_RE","ESCAPED","isLetter","lc","labelStart","ref","parseReference","pmax","ws","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","loneMarkers","isTerminatorChar","meta","attrPush","attrData","attrSet","value","attrGet","attrJoin","decodeCache","getDecodeCache","exclude","string","seq","b1","b2","b3","b4","chr","componentChars","encodeCache","getEncodeCache","keepEscaped","nextCode","encodeURIComponent","slashes","auth","port","pathname","hash","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","rest","simplePath","proto","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","stringFromCharCode","error","RangeError","array","callback","mapDomain","domain","parts","labels","encoded","ucs2decode","output","counter","extra","ucs2encode","codePoints","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","inputLength","n","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","Any","Cc","Cf","P","Z","_hoisted_1","class","_hoisted_2","_createElementVNode","_createTextVNode","_hoisted_3","_hoisted_4","_hoisted_5","_ctx","_cache","$props","$setup","$data","$options","_component_CollectionRow","_resolveComponent","_component_CollectionArticle","uid","_openBlock","_createElementBlock","_Fragment","_renderList","collections","collection","_createBlock","collectionRowData","_createVNode","collectionArticleData","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_component_RouterLink","to","_withCtx","_toDisplayString","_","subtitle","tags","CollectionRow","defineComponent","props","__exports__","_component_vue_markdown","article","projectLink","target","_createCommentVNode","demoLink","VueMarkdown","required","data","computed","_a","created","h","innerHTML","CollectionArticle","mounted","async","fetch","then","response","require","CollectionPage"],"sourceRoot":""}